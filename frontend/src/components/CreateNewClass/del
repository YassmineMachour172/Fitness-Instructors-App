import React, { useState } from 'react';
import { useNavigate,useParams  } from 'react-router-dom';
import './CreateNewClass.css';
import 'bootstrap/dist/css/bootstrap.min.css';
import logo from '../../images/logo.png'
import { yupResolver } from '@hookform/resolvers/yup';
import { logInSchema } from '../../Validations/FormsValidation';
import { useForm } from 'react-hook-form';
import HomeIc from '../../images/home1.png'
import info1 from '../../images/info1.png'
import profile from '../../images/profile.png'
import CreateNewEx from '../../images/CreateNewEx.png'
import Dropdown from 'react-bootstrap/Dropdown';
import addVideo from '../../images/AddVideo.png';
import TrainersLib from '../TrainersLib/TrainersLib';
import { Modal, Button } from "react-bootstrap";
import axios from 'axios';
import  { useEffect} from 'react';
import ReactTable from '../ReactTable/ReactTable';


const CreateNewClass = () => {
    const { email } = useParams();
    const trainerEmail=localStorage.getItem('saved').replace(/"/g, '');
    const [showModal, setShow] = useState(false);/*define state for the modal box */
    const [msgModal, setMsgModal] = useState('');/*define state for the message modal box */
    const [imgSRC, setSRC] = useState('');
    const [btnOnClick, setOnClick] = useState('handleClicktrianersLib');
    const [isFButtonVisible, setIsFButtonVisible] = useState(true);
    const [isSButtonVisible, setIsSButtonVisible] = useState(false);
    const [TableData, setTableData] = useState([]);


    const handleClose = () =>{
        setShow(false);
        setMsgModal('');
   }
   useEffect(() => {
    async function fetchData() {
      try {
        const trainingNum = localStorage.getItem('trainingNum').replace(/"/g, '');
        console.log("before")
        const response = await axios.get('http://localhost:8000/api/trainingPlas/CreateNewClass', { params: { trainingNum } });
        console.log("after")

        setTableData(response.data.TrainersLib.user);
      } catch (error) {
        console.error("catch ",error);
      }
    }

    fetchData();
  }, []);
  const tableColumns = React.useMemo(
    () => [
      {
        Header: 'trainingNum',
        accessor: 'trainingNum',
      },
      {
        Header: 'exercisetitle',
        accessor: 'exercisetitle',
      },
      {
        Header: 'className',
        accessor: 'className',
      },
      {
        Header: 'description',
        accessor: 'description',
      },{
        Header: 'trainerEmail',
        accessor: 'trainerEmail'
    }
    ],
    []
  );
   /* function that open the modal and displays it*/
   const handleShow = () =>{
       setShow(true);
   }
    const [form,setForm]=React.useState({
        NameOfC:"",
        description:"",
        cType:"",
        keywords:""
      }) 

    const handleClicktrianersLib = () => {
        < TrainersLib email={email} />
        navigate(`/TrainersLib/${email}`);
    };
    const navigate = useNavigate();
    const { register, formState: { errors }} = useForm({
        resolver: yupResolver(logInSchema), /* validate the form with the schema */
        mode: "onChange" /* validate the form on change */
    });
    function handleChange(event){
        const inputValue =event.target.value;
        
        setForm({
          ...form,
          [event.target.name]: inputValue
        })
      }
      async function handleSubmit(event){
        event.preventDefault();
        console.log({form});
        const NameOfC=form.NameOfC;
        const description=form.description;
        const cType=form.cType;
        const keywords=form.keywords;
        
  
        try{
          const res=await axios.post("http://localhost:8000/api/classes/CreateNewClass",{NameOfC,description,cType,email,keywords})
          
          
          if((res?.data?.success===true)){
                console.log("successful")
                localStorage.setItem('className', JSON.stringify(NameOfC));
                localStorage.setItem('description', JSON.stringify(description));
                setMsgModal("Uploaded successfully!")
               handleShow();
          }
          else{
            console.log("error",res.error)
            setMsgModal("error",res.error);
            handleShow();
          }
          
        }catch(e){
            console.log(e)
        }
      }
    return (
        <footer>
        <center>
        <div className="container-fluid">
            <div className='backgroundcol'>
            <div className="row">
                
                 <div Style="color:Black;" >
                    <img src={CreateNewEx} className="infoInfo"/>
                       Create New Class
                </div>
                
            </div>
           
                    <div className='row'>
                    <div className="row" id='form-con'>
                        <form action=""  onSubmit={handleSubmit} className="user" >
                            <div className="text-con">
                                                  <div className='col'>
                                                    <div className='row'>
                                                    <div className='text' Style="color:Black;">Name Of The Class:</div>
                                                   
                                                    <input Style="color: Black;background-color: transparent;border-radius: 12px;" onChange={handleChange} type="text" name="NameOfC"
                                                id='NameOfC'  /> 
                                                  </div>
                                                  <div className='row'>
                                                  <div className='text' Style="color:Black;">Type Of The Class:</div>
                                                   
                                                <select name='cType' onChange={handleChange}>
                                                    <option value="">Select an option</option>
                                                    <option value="Basic squat">Basic squat</option>
                                                    <option value="Jump squat">Jump squat</option>
                                                    <option value="Forword punch">Forword punch</option>
                                                    <option value="Jumping jacks">Jumping jacks</option>
                                                </select>
                                                      </div>
                                                    
                                                  
                                                  <div className='row'>
                                                  <div className='text' Style="color:Black;">Description:</div>
                                                  
                                                  <input Style="color: Black;background-color: transparent;border-radius: 12px;" onChange={handleChange} id="description" type="textBox" 
                                                    name="description"
                                                    placeholder="please descripe the class" />
                                                  
                                                  </div>
                                                  <div className='row'margin-bottom='-10px'>
                                                  
                                                  <div className='text' Style="color:Black;">Key Words:</div>
                                                  
                                                  <input Style="color: Black;background-color: transparent;border-radius: 12px;" onChange={handleChange} type="text" name="keywords" id='KeyWords'
                                                placeholder="#"/>
                                                
                                                 
                                                </div>
                                                <div className='row' style={{flexDirection: 'row', height:50, width: 400}}>
                                                <div style={{ color: 'black' }}>Please choose from the library the exercises you wish to add to this class:</div>
                                                </div>
                                                
                                                <div className='row' style={{flexDirection: 'row', height:100, width: 500}}>
                                                    <button Style="color: Black;background-color: transparent;border-radius: 12px;" onClick={()=>{navigate('/TrainersLibSelect')}} value='first' type='button'></button>
                                                   
                                                    
                                                </div>
                                                <div className='row' style={{flexDirection: 'row', height:100, width: 850}} >
                                                  <div className='col'>
                                                  <button  type="submit" className='about-us'>Publish and Save</button>
                                                  </div>
                                                  <div className='col'>
                                                  <button onClick={() => navigate('/MyClassesTrainer')} type="submit" className='about-us'>Save</button>
                                                  </div>
                                                  </div>
                                                </div>
                                                  
                                                  </div>
                                                 </form>

                                                 <div className="row">
                        {/* Page Heading */}
                        <h1 className="h3 mb-2 text-gray-800">TrainingPlans  <br/><br/></h1>
                        </div><div className="row">
                        <div className="card shadow mb-4">
                            <div className="card-body">
                                <div className="table-responsive">
                                    <table className="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                        <ReactTable columns={tableColumns} data={TableData} />
                                    </table>
                                </div>
                            </div>
                        </div></div>
                                                 <div className='row' style={{flexDirection: 'row', height:100, width: 500}}>
                                                 <div class="btn-group">
                                <button Style="border: none;color: Black;background-color: transparent;border-radius: 12px;" onClick={() => navigate('/')}><img src={HomeIc} className="HomBbox"  /></button>
                                <button Style="border: none;color: Black;background-color: transparent;border-radius: 12px;" onClick={() => navigate('/Info')}><img src={info1} className="InfoBbox"/></button>
                                <button  Style="border: none;color: Black;background-color: transparent;border-radius: 12px;" onClick={()=>navigate('/Profile')}><img src={profile} className="ProfileBbox"/></button>
                              </div><div className="row" style={{flexDirection: 'row', height:10, width: 500}}>
                            <center>
                        <img src={logo} className="logo"/>
                        </center>
                    </div>
                    </div>
                                                 <Modal show={showModal} onHide={handleClose}>
                                                    <Modal.Header closeButton>
                                                    <Modal.Title className='msg-modal-title'>ALERT!</Modal.Title>
                                                    </Modal.Header>
                                                    <Modal.Body><p className='msg-modal'>{msgModal}</p></Modal.Body>
                                                    <Modal.Footer>
                                                      <Button variant="secondary" onClick={handleClose}>
                                                          Close
                                                      </Button>
                      
                                                    </Modal.Footer>
                                                  </Modal> 
                                                 </div>
                                                 
                                                 </div>
                                                
                                                 </div>
                    
                      </div>
                      </center>
                      </footer>
        
    );
};

export default CreateNewClass;
